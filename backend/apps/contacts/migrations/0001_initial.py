# Generated by Django 3.2.25 on 2025-10-24 13:56

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nome/Razão Social')),
                ('type', models.CharField(choices=[('individual', 'Pessoa Física'), ('company', 'Pessoa Jurídica')], default='individual', max_length=20, verbose_name='Tipo')),
                ('cpf_cnpj', models.CharField(max_length=18, unique=True, validators=[django.core.validators.RegexValidator(message='Formato inválido. Use: 000.000.000-00 ou 00.000.000/0000-00', regex='^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$|^\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}-\\d{2}$')], verbose_name='CPF/CNPJ')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Formato inválido. Use: (00) 0000-0000', regex='^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$')], verbose_name='Telefone')),
                ('cellphone', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Formato inválido. Use: (00) 0000-0000', regex='^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$')], verbose_name='Celular')),
                ('address', models.CharField(blank=True, max_length=300, null=True, verbose_name='Endereço')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade')),
                ('state', models.CharField(blank=True, max_length=2, null=True, verbose_name='Estado')),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='Formato inválido. Use: 00000-000', regex='^\\d{5}-\\d{3}$')], verbose_name='CEP')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nome/Razão Social')),
                ('type', models.CharField(choices=[('individual', 'Pessoa Física'), ('company', 'Pessoa Jurídica')], default='company', max_length=20, verbose_name='Tipo')),
                ('cpf_cnpj', models.CharField(max_length=18, unique=True, validators=[django.core.validators.RegexValidator(message='Formato inválido. Use: 000.000.000-00 ou 00.000.000/0000-00', regex='^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$|^\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}-\\d{2}$')], verbose_name='CPF/CNPJ')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Formato inválido. Use: (00) 0000-0000', regex='^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$')], verbose_name='Telefone')),
                ('cellphone', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Formato inválido. Use: (00) 0000-0000', regex='^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$')], verbose_name='Celular')),
                ('address', models.CharField(blank=True, max_length=300, null=True, verbose_name='Endereço')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade')),
                ('state', models.CharField(blank=True, max_length=2, null=True, verbose_name='Estado')),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='Formato inválido. Use: 00000-000', regex='^\\d{5}-\\d{3}$')], verbose_name='CEP')),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True, verbose_name='Pessoa de Contato')),
                ('payment_terms', models.CharField(blank=True, max_length=100, null=True, verbose_name='Condições de Pagamento')),
                ('delivery_time', models.CharField(blank=True, max_length=50, null=True, verbose_name='Prazo de Entrega')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
            ],
            options={
                'verbose_name': 'Fornecedor',
                'verbose_name_plural': 'Fornecedores',
                'ordering': ['name'],
            },
        ),
    ]
