# Docker Compose para produção com Caddy como proxy reverso - SQLite
version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.prod
    image: stockbit-backend:latest
    expose:
      - "8000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS},caddy
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
    env_file:
      - .env
    volumes:
      - static_files:/app/staticfiles
      - media_files:/app/media
      - sqlite_data:/app
    command: >
      sh -c "python manage.py migrate --noinput &&
             python create_admin.py &&
             gunicorn inventory_api.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120"
    networks:
      - stockbit-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL}
    image: stockbit-frontend-dev:latest
    expose:
      - "5173"
    environment:
      - VITE_API_URL=${VITE_API_URL}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - stockbit-network
    restart: unless-stopped

  caddy:
    image: caddy:2-alpine
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
      - caddy_logs:/var/log/caddy
    networks:
      - stockbit-network
    restart: unless-stopped
    depends_on:
      - frontend
      - backend
    environment:
      - CADDY_ADMIN=0.0.0.0:2019

networks:
  stockbit-network:
    driver: bridge

volumes:
  static_files:
  media_files:
  sqlite_data:
  caddy_data:
  caddy_config:
  caddy_logs:

